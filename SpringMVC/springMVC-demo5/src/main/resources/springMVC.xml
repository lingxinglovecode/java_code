<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
                           http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">


<!--    组件扫描-->
    <context:component-scan base-package="com.lianxing"></context:component-scan>


    <!-- 配置Thymeleaf视图解析器 -->
    <bean id="viewResolver" class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
        <property name="order" value="1"/> <!-- 优先级-->
        <property name="characterEncoding" value="UTF-8"/>
        <property name="templateEngine">
            <bean class="org.thymeleaf.spring5.SpringTemplateEngine">
                <property name="templateResolver">
                    <bean class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">

                        <!-- 视图前缀 -->
                        <property name="prefix" value="/WEB-INF/templates/"/>

                        <!-- 视图后缀 -->
                        <property name="suffix" value=".html"/>
                        <property name="templateMode" value="HTML5"/>
                        <property name="characterEncoding" value="UTF-8" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <!--    配置视图控制器-->
    <mvc:view-controller path="/" view-name="index"></mvc:view-controller>
    <mvc:view-controller path="/file" view-name="file"></mvc:view-controller>


    <!--    springmvc的dispatchservlet不能对静态资源进行访问，所以需要使用默认servlet去找静态资源
            先由springmvc对请求进行处理，如果找不到资源就是用默认的servlet-->
    <!--    开放对静态资源的访问-->
    <mvc:default-servlet-handler></mvc:default-servlet-handler>
    <!--    开启MVC的注解驱动-->
    <mvc:annotation-driven></mvc:annotation-driven>


    <!--    配置文件上传解析器，将上传的文件封装为MultipartFile-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>

<!--    配置拦截器-->
    <mvc:interceptors>
<!--        拦截所有请求-->
<!--        <bean class="com.lianxing.mvc.interceptors.FirstInterceptor" ></bean>-->
<!--        <ref bean="firstInterceptor"></ref>-->

<!--        <mvc:interceptor>-->
<!--            &lt;!&ndash;拦截一层目录的所有请求&ndash;&gt;-->
<!--&lt;!&ndash;            <mvc:mapping path="/*"/>&ndash;&gt;-->
<!--            &lt;!&ndash;  拦截所有请求&ndash;&gt;-->
<!--            <mvc:mapping path="/**"/>-->
<!--            &lt;!&ndash;排除掉拦截主页面的请求&ndash;&gt;-->
<!--            <mvc:exclude-mapping path="/"/>-->
<!--            <ref bean="firstInterceptor"></ref>-->
<!--        </mvc:interceptor>-->

        <ref bean="firstInterceptor"></ref>
        <ref bean="secondInterceptor"></ref>


    </mvc:interceptors>


<!--    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">-->
<!--        <property name="exceptionMappings">-->
<!--            <props >-->
<!--                <prop key="java.lang.ArithmeticException">error</prop>-->
<!--            </props>-->
<!--        </property>-->
<!--        <property name="exceptionAttribute" value="ex"></property>-->
<!--    </bean>-->
</beans>
